name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  IMAGE_NAME: minji
  IMAGE_TAG: latest

jobs:
  deploy:
    name: Build and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: AWS 인증 설정
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Gradle 빌드
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: ECR 로그인
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login --username AWS --password-stdin ${{ secrets.REPOSITORY_URI }}

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME:$IMAGE_TAG ${{ secrets.IMAGE_URI }}
          docker push ${{ secrets.IMAGE_URI }}

      - name: imagedefinitions.json 생성
        run: |
          printf '[{"name":"${{ secrets.CONTAINER_NAME }}","imageUri":"%s"}]' "${{ secrets.IMAGE_URI }}" > imagedefinitions.json
          cat imagedefinitions.json

      - name: ECS 서비스 업데이트
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: imagedefinitions.json
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
