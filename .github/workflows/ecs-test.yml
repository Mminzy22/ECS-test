name: Build and Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        id: build-image
        run: |
          IMAGE_URI=${{ secrets.IMAGE_URI }}
          IMAGE_NAME=${{ secrets.IMAGE_NAME }}
          CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}

          docker build -t IMAGE_NAME .
          docker push $IMAGE_URI

          mkdir -p build/deploy
          printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$IMAGE_URI" > build/deploy/imagedefinitions.json


      - name: Upload imagedefinitions.json
        uses: actions/upload-artifact@v4
        with:
          name: image-definitions
          path: build/deploy/imagedefinitions.json

  deploy:
    name: Deploy to Amazon ECS
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Download image-definitions
        uses: actions/download-artifact@v4
        with:
          name: image-definitions
          path: build/deploy

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          image-definitions: build/deploy/imagedefinitions.json
